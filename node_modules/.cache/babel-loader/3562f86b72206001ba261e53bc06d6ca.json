{"ast":null,"code":"var _jsxFileName = \"/home/hadi/Documents/GitHub/Github-finder-Hadi/git-finder/src/context/github/GithubState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n  _s();\n\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // Search Users\n\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // Get User\n\n\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; // Get Repos\n\n\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; // Clear Users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); // Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\nexport default GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["/home/hadi/Documents/GitHub/Github-finder-Hadi/git-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\n\nlet githubClientId;\nlet githubClientSecret;\n\nif(process.env.NODE_ENV !== 'production') {\n    githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n    githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n    githubClientId = process.env.GITHUB_CLIENT_ID;\n    githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading: false\n    }\n\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n    // Search Users\n    const searchUsers = async (text) => {\n        setLoading();\n        const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`)\n        dispatch({\n            type: SEARCH_USERS,\n            payload: res.data.items\n        })\n      }\n\n    // Get User\n    const getUser = async (username) => {\n        setLoading();\n        const res = await axios.get(`https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`)\n        dispatch({\n            type: GET_USER,\n            payload: res.data\n        })\n      }\n\n    // Get Repos\n    const getUserRepos = async (username) => {\n        setLoading();\n        const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`)\n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        })\n      }\n\n    // Clear Users\n    const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n    // Set Loading\n    const setLoading = () => dispatch({ type: SET_LOADING });\n\n    return <GithubContext.Provider \n                value={{ \n                    users: state.users, \n                    user: state.user, \n                    repos: state.repos, \n                    loading: state.loading,\n                    searchUsers,\n                    clearUsers,\n                    getUser,\n                    getUserRepos\n                }}>\n        {props.children}\n    </GithubContext.Provider>\n}\n\nexport default GithubState;"]},"metadata":{},"sourceType":"module"}